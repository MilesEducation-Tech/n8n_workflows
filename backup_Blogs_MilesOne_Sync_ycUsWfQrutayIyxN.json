{
  "createdAt": "2025-06-12T07:54:59.146Z",
  "updatedAt": "2025-06-18T14:19:42.000Z",
  "id": "ycUsWfQrutayIyxN",
  "name": "Blogs-MilesOne Sync",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "blog_blogpost",
          "mode": "list",
          "cachedResultName": "blog_blogpost"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "featured",
              "value": "True"
            },
            {
              "column": "category_id",
              "value": "e04315d7-ffc5-400c-b5de-a4b595045895"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        200,
        0
      ],
      "id": "f0b1bed4-77f3-430a-a131-d309a68c5e36",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "UqfE8XafrkxRtOpi",
          "name": "Blogs Production"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        460,
        -80
      ],
      "id": "545807f7-6109-43fd-b319-36e6e5d749a8",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e7651826-a068-4726-9c69-015cd32edbdb",
              "leftValue": "={{ $json.publish_date }}",
              "rightValue": "={{ DateTime.now().minus({ days: 30 }) }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        760,
        -20
      ],
      "id": "4cc698ef-42f1-4e8a-9d6e-09a47063db50",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "post_newpost",
          "mode": "list",
          "cachedResultName": "post_newpost"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "linked_post",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1260,
        -100
      ],
      "id": "21bb9c98-110f-4563-ad03-de94677697f4",
      "name": "Miles One New Post",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "iOOTVit15R9PSjWX",
          "name": "Milesone-Production(DO NOT TOUCH)"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "5e70c3d8-cc6b-402a-8a16-04368b83285e",
              "leftValue": "={{ $('Miles One New Post').item.json.keys().length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1720,
        -80
      ],
      "id": "e3e216a0-26f3-418f-97b4-032ba0811f09",
      "name": "If1"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "post_newpost",
          "mode": "list",
          "cachedResultName": "post_newpost"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": true,
            "featured": false,
            "title": "={{ $('If').item.json.title }}",
            "description": ".",
            "likes": 0,
            "dummy_likes": "={{ $json.myNewField }}",
            "order": 0,
            "id": "={{ $('uuid').item.json.db_record_id }}",
            "updated_at": "={{ $now}}",
            "created_at": "={{ $now}}",
            "linked_post": "={{ $('If').item.json.id }}",
            "layout_id": "cbcb352f-fff8-4106-aeeb-658635176a4d"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "full_video_url",
              "displayName": "full_video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "blog_url",
              "displayName": "blog_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "featured",
              "displayName": "featured",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "likes",
              "displayName": "likes",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "linked_post",
              "displayName": "linked_post",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_by_id",
              "displayName": "created_by_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "modified_by_id",
              "displayName": "modified_by_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "layout_id",
              "displayName": "layout_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "dummy_likes",
              "displayName": "dummy_likes",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "order",
              "displayName": "order",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2880,
        -80
      ],
      "id": "14d60b8d-9c8d-40f4-83a1-44132646845e",
      "name": "Miles One New Post1",
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "iOOTVit15R9PSjWX",
          "name": "Milesone-Production(DO NOT TOUCH)"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// This code is for n8n's JavaScript Code node.\n// It iterates over input items, generates a random number between 15 and 99,\n// and adds it to 'myNewField' in each item's JSON.\n\n// --- Function to generate a random integer within a range ---\nfunction getRandomIntegerBetween(min, max) {\n  min = Math.ceil(min);   // Ensure min is an integer (round up)\n  max = Math.floor(max); // Ensure max is an integer (round down)\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// --- Main Logic for n8n Code Node ---\n// 'items' is the array of input items provided by n8n.\nfor (let i = 0; i < items.length; i++) {\n    const item = items[i]; // Get the current item\n\n    // Generate a random number between 15 and 99 (inclusive)\n    const randomNumber = getRandomIntegerBetween(15, 99);\n\n    // Add the new field 'myNewField' to the item's JSON\n    // You can also add other logic here if you want to use the incoming 'id'\n    // but this code is solely for generating and assigning a random number.\n    item.json.myNewField = randomNumber;\n}\n\n// The n8n Code node expects an array of objects to be returned.\n// We return the 'items' array which we modified in place.\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2500,
        -80
      ],
      "id": "f76bfbc3-23ec-443b-9994-c38bab40632e",
      "name": "lIKES"
    },
    {
      "parameters": {
        "jsCode": "// This code is for n8n's JavaScript Code node.\n// It generates a new random UUIDv4 for each item\n// and adds it to a new field named 'db_record_id'.\n\nfor (let i = 0; i < items.length; i++) {\n    const item = items[i];\n\n    let newUuidForDb = null;\n\n    // Generate a new UUID v4 (random)\n    // This uses the modern, secure crypto.randomUUID() if available,\n    // otherwise falls back to a Math.random() based method.\n    if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n        newUuidForDb = crypto.randomUUID();\n    } else {\n        // Fallback for environments without crypto.randomUUID (less cryptographically secure)\n        newUuidForDb = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            const r = Math.random() * 16 | 0;\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    // Add the new UUID to a new field in the item's JSON.\n    // We'll use 'db_record_id' as the field name.\n    item.json.db_record_id = newUuidForDb;\n\n    // You might want to log this for debugging\n    console.log(`Item ${i} - Generated db_record_id: ${item.json.db_record_id}`);\n}\n\n// Return the modified items array to the next node.\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2120,
        -80
      ],
      "id": "1007ab83-dabd-49cd-8f9f-b930fa4ee5d3",
      "name": "uuid"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "post_newpostfile",
          "mode": "list",
          "cachedResultName": "post_newpostfile"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": true,
            "dummy_likes": "={{ $('lIKES').item.json.myNewField }}",
            "new_post_file_order": 0,
            "id": "={{ $json.db_record_id }}",
            "media_type": "Image",
            "image_path": "={{ $('If').item.json.banner_url }}",
            "image_path_url": "={{ $('If').item.json.banner_url }}",
            "post_id": "={{ $('Miles One New Post1').item.json.id }}",
            "created_at": "={{ $now}}",
            "like": "={{ $('lIKES').item.json.myNewField }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "like",
              "displayName": "like",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "media_type",
              "displayName": "media_type",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "thumbnail",
              "displayName": "thumbnail",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "thumbnail_url",
              "displayName": "thumbnail_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_path",
              "displayName": "image_path",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "image_path_url",
              "displayName": "image_path_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "post_id",
              "displayName": "post_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "dummy_likes",
              "displayName": "dummy_likes",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "redirect_code",
              "displayName": "redirect_code",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "new_post_file_order",
              "displayName": "new_post_file_order",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3760,
        -80
      ],
      "id": "a3122117-fabd-405d-8bcc-82e3f7d246ae",
      "name": "Miles One New Post2",
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "iOOTVit15R9PSjWX",
          "name": "Milesone-Production(DO NOT TOUCH)"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// This code is for n8n's JavaScript Code node.\n// It generates a new random UUIDv4 for each item\n// and adds it to a new field named 'db_record_id'.\n\nfor (let i = 0; i < items.length; i++) {\n    const item = items[i];\n\n    let newUuidForDb = null;\n\n    // Generate a new UUID v4 (random)\n    // This uses the modern, secure crypto.randomUUID() if available,\n    // otherwise falls back to a Math.random() based method.\n    if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n        newUuidForDb = crypto.randomUUID();\n    } else {\n        // Fallback for environments without crypto.randomUUID (less cryptographically secure)\n        newUuidForDb = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            const r = Math.random() * 16 | 0;\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    // Add the new UUID to a new field in the item's JSON.\n    // We'll use 'db_record_id' as the field name.\n    item.json.db_record_id = newUuidForDb;\n\n    // You might want to log this for debugging\n    console.log(`Item ${i} - Generated db_record_id: ${item.json.db_record_id}`);\n}\n\n// Return the modified items array to the next node.\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3300,
        -80
      ],
      "id": "ecc1b72f-7c48-45bd-aced-07c5433c372e",
      "name": "UUID new post file"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8,
              "triggerAtMinute": 2
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -120,
        0
      ],
      "id": "96a8f0df-5b00-4fbe-b498-8d14852e5507",
      "name": "Schedule Trigger"
    }
  ],
  "connections": {
    "Postgres": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Miles One New Post",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Miles One New Post": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "uuid",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lIKES": {
      "main": [
        [
          {
            "node": "Miles One New Post1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "uuid": {
      "main": [
        [
          {
            "node": "lIKES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Miles One New Post1": {
      "main": [
        [
          {
            "node": "UUID new post file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UUID new post file": {
      "main": [
        [
          {
            "node": "Miles One New Post2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Miles One New Post2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "4ebef75f-2e64-466e-b5a9-df86531fbe70",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-06-12T07:54:59.155Z",
      "updatedAt": "2025-06-12T07:54:59.155Z",
      "role": "workflow:owner",
      "workflowId": "ycUsWfQrutayIyxN",
      "projectId": "cR71BtEHrwxYg2T3",
      "project": {
        "createdAt": "2025-03-05T09:02:14.120Z",
        "updatedAt": "2025-03-05T09:02:14.120Z",
        "id": "cR71BtEHrwxYg2T3",
        "name": "jithin jithin.kumar@mileseducation.com <jithin.kumar@mileseducation.com>",
        "type": "personal",
        "icon": null,
        "projectRelations": [
          {
            "createdAt": "2025-03-05T09:02:14.123Z",
            "updatedAt": "2025-03-05T09:02:14.123Z",
            "role": "project:personalOwner",
            "userId": "f51de756-6885-4866-9956-6527c235116c",
            "projectId": "cR71BtEHrwxYg2T3",
            "user": {
              "createdAt": "2023-08-04T07:13:39.569Z",
              "updatedAt": "2025-03-27T08:36:36.628Z",
              "id": "f51de756-6885-4866-9956-6527c235116c",
              "email": "jithin.kumar@mileseducation.com",
              "firstName": "jithin",
              "lastName": "jithin.kumar@mileseducation.com",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2023-08-04T07:16:29.938Z",
                "personalization_survey_n8n_version": "1.1.1"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "AI5qL0olh221f3jV",
                "isOnboarded": true,
                "userActivatedAt": 1741165335002,
                "easyAIWorkflowOnboarded": true,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1743064591892
                }
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "isPending": false,
              "isOwner": true
            }
          }
        ]
      }
    }
  ],
  "tags": []
}